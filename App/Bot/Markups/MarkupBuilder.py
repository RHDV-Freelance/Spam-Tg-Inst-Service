import asyncio
import os

from telebot import formatting
from telebot import types
from telebot.types import ReplyKeyboardMarkup

from App.Database.DAL.AccountDAL import AccountDAL
from App.Database.session import async_session


class MarkupBuilder(object):

    _change_status = None
    _adv_chat_added = None
    _sendAddAdvChatText = None
    _errorSetTargetChannel = None
    _prompt_edited: object = None
    _sendChangePromptText: object = None
    _message_edited: object = None
    _sendChangeAccountMessageText: object = None
    _changeAccountMsg: object = None
    _editAccountsMenuText: object = None
    _new_account_state1: object = None
    _hide_menu: object = None
    _welcome_text: object = None

    @classmethod
    async def AccountListKeyboard(cls):
        async with async_session() as session:
            account_dal = AccountDAL(session)
            acc_out = await account_dal.getAllAccounts()
            ACCOUNTS = [
                {
                    "session_name": os.path.splitext(
                        os.path.basename(x.session_file_path)
                    )[0]
                }
                for x in acc_out
            ]

            mp = types.InlineKeyboardMarkup(row_width=2)

            for account in ACCOUNTS:
                mp.add(
                    types.InlineKeyboardButton(
                        text=account["session_name"],
                        callback_data=f"edit_account#{account['session_name']}",
                    )
                )

            mp.add(
                types.InlineKeyboardButton(
                    text="üîô–ù–∞–∑–∞–¥", callback_data="back_to_main_menu"
                )
            )

            return mp

    @classmethod
    def AccountEditActions(cls, account_name):
        return types.InlineKeyboardMarkup(
            row_width=2,
            keyboard=[
                [
                    types.InlineKeyboardButton(
                        text="üí¨–ò–∑–º–µ–Ω–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ",
                        callback_data=f"change_acc_msg#{account_name}",
                    )
                ],
                [
                    types.InlineKeyboardButton(
                        text="‚úçÔ∏è–ò–∑–º–µ–Ω–∏—Ç—å prompt –¥–ª—è ChatGPT",
                        callback_data=f"change_prompt#{account_name}",
                    )
                ],
                [
                    types.InlineKeyboardButton(
                        text="‚ûï–î–æ–±–∞–≤–∏—Ç—å —Ä–µ–∫–ª–∞–º–Ω—ã–π —á–∞—Ç",
                        callback_data=f"add_adv_chat#{account_name}",
                    )
                ],
                [
                    types.InlineKeyboardButton(
                        text="‚ûñ–£–±—Ä–∞—Ç—å —Ä–µ–∫–ª–∞–º–Ω—ã–π —á–∞—Ç",
                        callback_data=f"remove_adv_chat#{account_name}",
                    )
                ],
                [
                    types.InlineKeyboardButton(
                        text="üéØ–ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª",
                        callback_data=f"change_target_channel#{account_name}",
                    )
                ],
                [
                    types.InlineKeyboardButton(
                        text="üÜô–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å",
                        callback_data=f"change_status#{account_name}",
                    )
                ],
                [
                    types.InlineKeyboardButton(
                        text="üîÑ–û–±–Ω–æ–≤–∏—Ç—å —Ä–µ–∫–ª–∞–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ChatGPT",
                        callback_data=f"reload_chatgpt_message#{account_name}",
                    )
                ],
                [
                    types.InlineKeyboardButton(
                        text="üóë–£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç",
                        callback_data=f"delete_account#{account_name}",
                    )
                ],
                [
                    types.InlineKeyboardButton(
                        text="üîô–ù–∞–∑–∞–¥", callback_data=f"back_to_editAccounts_menu"
                    )
                ],
            ],
        )

    @classmethod
    async def AccountEditActions_text(cls, account_name):
        async with async_session() as session:
            account_dal = AccountDAL(session)
            account = await account_dal.getAccountBySessionName(
                session_name=account_name
            )

            advertising_channels = ""
            if account.advertising_channels is not None:
                for x in account.advertising_channels:
                    y = x.replace("_", "\\_") if "_" in x else x
                    advertising_channels += f"{y}\n"
            else:
                advertising_channels = "ü§∑‚Äç‚ôÇÔ∏è–ù–µ—Ç —á–∞—Ç–æ–≤ –¥–ª—è —Ä–µ–∫–ª–∞–º—ã"

            target_chat = (
                account.target_chat.replace("_", "\\_")
                if "_" in account.target_chat
                else account.target_chat
            )
            account_username = (
                os.path.splitext(os.path.basename(account.session_file_path))[
                    0
                ].replace("_", "\\_")
                if "_"
                in os.path.splitext(os.path.basename(account.session_file_path))[0]
                else os.path.splitext(os.path.basename(account.session_file_path))[0]
            )
            prompt = (
                account.prompt.replace("_", "\\_")
                if "_" in account.prompt
                else account.prompt
            )

            out_message = f"""
ü§ñ–ê–∫–∫–∞—É–Ω—Ç: {account_username}
üéØ–¶–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª: {target_chat}
üÜô–°—Ç–∞—Ç—É—Å: {"–ê–∫—Ç–∏–≤–µ–Ω" if account.status else "–ù–µ –∞–∫—Ç–∏–≤–µ–Ω"}
‚úçÔ∏èChatGPT prompt:
-------------------
{prompt}
-------------------
üí¨–†–µ–∫–ª–∞–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:
-------------------

{account.message}

-------------------
üìù–ß–∞—Ç—ã –¥–ª—è —Ä–µ–∫–ª–∞–º—ã:
{advertising_channels}
"""
            print(out_message[62])

            def split_string(input_string, max_length=4000):
                result = []
                for i in range(0, len(input_string), max_length):
                    result.append(input_string[i : i + max_length])
                return result

            return split_string(out_message)

    @classmethod
    @property
    def hide_menu(cls):
        cls._hide_menu: object = types.ReplyKeyboardRemove()
        return cls._hide_menu

    @classmethod
    def main_menu(cls):
        menu: ReplyKeyboardMarkup = types.ReplyKeyboardMarkup(
            row_width=1,
            resize_keyboard=True,
            one_time_keyboard=True,
        ).add(
            types.KeyboardButton("ü§ñ –î–æ–±–∞–≤–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç"),
            types.KeyboardButton("üõ† –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç—ã"),
            types.KeyboardButton("üìù –õ–æ–≥–∏"),
        )
        return menu

    @classmethod
    @property
    def welcome_text(cls):
        cls._welcome_text: object = formatting.format_text(
            formatting.mbold(
                "üëã–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –≠—Ç–æ –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–æ–π –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º."
            ),
            "üî¢–í—ã–±–µ—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é",
            separator="\n",
        )
        return cls._welcome_text

    @classmethod
    @property
    def new_account_state1(cls):
        cls._new_account_state1 = "üì©–û—Ç–ø—Ä–∞–≤—å —Ñ–∞–π–ª —Å–µ—Å—Å–∏–∏ –∞–∫–∞—É–Ω—Ç–∞ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –∏–º–µ–Ω–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç–µ: <b>account_name.session</b>"
        return cls._new_account_state1

    @classmethod
    @property
    def editAccountsMenuText(cls):
        cls._editAccountsMenuText = "<b>ü§ñ–ê–∫–∫–∞–Ω—É—Ç—ã:</b>"
        return cls._editAccountsMenuText

    @classmethod
    @property
    def sendChangeAccountMessageText(cls):
        cls._sendChangeAccountMessageText = "üí¨<b>–£–∫–∞–∂–∏—Ç–µ —Ä–µ–∫–ª–∞–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ MARKDOWN —Ä–∞–∑–º–µ—Ç–∫–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –±–∞–∑–æ–π –¥–ª—è –ø–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ChatGPT</b>"
        return cls._sendChangeAccountMessageText

    @classmethod
    @property
    def sendChangePromptText(cls):
        cls._sendChangePromptText = (
            "‚úçÔ∏è<b>–£–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞, –¥–ª—è prompt ChatGPT</b>"
        )
        return cls._sendChangePromptText

    @classmethod
    @property
    def message_edited(cls):
        cls._message_edited = "<b>‚úÖ–¢–µ–∫—Å—Ç —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–æ</b>"
        return cls._message_edited

    @classmethod
    @property
    def prompt_edited(cls):
        cls._prompt_edited = "<b>‚úÖ–¢–µ–∫—Å—Ç prompt –∏–∑–º–µ–Ω–µ–Ω–æ</b>"
        return cls._prompt_edited

    @classmethod
    @property
    def target_edited(cls):
        cls._target_edited = "<b>‚úÖ–¶–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª –∏–∑–º–µ–Ω–µ–Ω</b>"
        return cls._target_edited

    @classmethod
    @property
    def sendChangePromptText(cls):
        cls._sendChangePromptText = "üéØ<b>–£–∫–∞–∂–∏—Ç–µ @username —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞.</b>\n<i>–≠—Ç–æ—Ç @username –±—É–¥–µ—Ç –ø–æ–¥—Å—Ç–∞–≤–ª—è—Ç—å—Å—è –≤ —Ä–µ–∫–ª–∞–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ prompt –¥–ª—è ChatGPT</i>"
        return cls._sendChangePromptText

    @classmethod
    @property
    def errorSetTargetChannel(cls):
        cls._errorSetTargetChannel = "‚ùå<b>–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è @username –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>"
        return cls._errorSetTargetChannel

    @classmethod
    @property
    def sendAddAdvChatText(cls):
        cls._sendAddAdvChatText = (
            "‚ûï<b>–£–∫–∞–∂–∏—Ç–µ @username —á–∞—Ç–∞ –¥–ª—è —Ä–µ–∫–ª–∞–º—ã –¥–∞–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞</b>"
        )
        return cls._sendAddAdvChatText

    @classmethod
    @property
    def adv_chat_added(cls):
        cls._adv_chat_added = "<b>‚úÖ–†–µ–∫–ª–∞–º–Ω—ã–π —á–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω</b>"
        return cls._adv_chat_added

    @classmethod
    @property
    def adv_chat_removed(cls):
        cls._adv_chat_removed = "‚úÖ<b>–†–µ–∫–ª–∞–º–Ω—ã–π —á–∞—Ç —É–¥–∞–ª–µ–Ω</b>"
        return cls._adv_chat_removed

    @classmethod
    @property
    def sendRemoveAdvChatText(cls):
        cls._sendRemoveAdvChatText = (
            "‚ûñ<b>–£–∫–∞–∂–∏—Ç–µ @username –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —á–∞—Ç–∞ –∏–∑ —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤</b>"
        )
        return cls._sendRemoveAdvChatText

    @classmethod
    @property
    def ReloadedChatGPTMessageText(cls):
        cls._ReloadedChatGPTMessageText = "‚úÖ<b>–†–µ–∫–ª–∞–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ</b>"
        return cls._ReloadedChatGPTMessageText

    @classmethod
    @property
    def sendDeleteAccountText(cls):
        cls._sendDeleteAccountText = "üóë<b>–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç? –ù–∞–ø–∏—à–∏—Ç–µ: –î–ê, –¢–û–ß–ù–û - —á—Ç–æ –±—ã —É–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç</b>"
        return cls._sendDeleteAccountText

    @classmethod
    @property
    def account_deleted(cls):
        cls._account_deleted = "‚úÖ<b>–ê–∫–∫–∞—É–Ω—Ç –∏ —Å–µ—Å—Å–∏—è —É–¥–∞–ª–µ–Ω—ã</b>"
        return cls._account_deleted

    @classmethod
    def not_ready_change_status(cls, status: bool):
        cls._change_status = f"‚ùå<b>–ù–µ –≤—Å–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã, –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –≥–æ—Ç–æ–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</b>\n–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞: <b>{status}</b>"
        return cls._change_status

    @classmethod
    def ready_change_status(cls, status: bool):
        cls._change_status = f"‚úÖ<b>–ê–∫–∫–∞—É–Ω—Ç –≥–æ—Ç–æ–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</b>\n–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞: <b>{status}</b>"
        return cls._change_status

    @classmethod
    def change_status_menu(cls, session_name: str):
        return types.InlineKeyboardMarkup(
            row_width=1,
            keyboard=[
                [
                    types.InlineKeyboardButton(
                        text="‚úÖ–í–∫–ª—é—á–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç",
                        callback_data=f"set_status_on#{session_name}",
                    )
                ],
                [
                    types.InlineKeyboardButton(
                        text="‚ùå–í—ã–∫–ª—é—á–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç",
                        callback_data=f"set_status_off#{session_name}",
                    )
                ],
                [
                    types.InlineKeyboardButton(
                        text="üîô–ù–∞–∑–∞–¥", callback_data=f"back_to_edit_menu#{session_name}"
                    )
                ],
            ],
        )

    @classmethod
    def back_to_menu(cls):
        return types.InlineKeyboardMarkup(
            row_width=1,
            keyboard=[
                [
                    types.InlineKeyboardButton(
                        text="üîô–ù–∞–∑–∞–¥", callback_data="back_to_main_menu"
                    )
                ]
            ],
        )

    @classmethod
    def back_to_edit_menu(cls, account_name):
        return types.InlineKeyboardMarkup(
            row_width=1,
            keyboard=[
                [
                    types.InlineKeyboardButton(
                        text="üîô–ù–∞–∑–∞–¥", callback_data=f"back_to_edit_menu#{account_name}"
                    )
                ]
            ],
        )
