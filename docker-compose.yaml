version: "3.9"
services:
  db:
    container_name: db
    image: postgres:14.1-alpine
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    networks:
      - custom

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    env_file:
      - .env
    ports:
      - "5050:80"
    networks:
      - custom

  app:
    build:
      context: ./App
      dockerfile: ./Dockerfile
    container_name: app_container
    restart: always
    ports:
      - "8000:8000"
    networks:
      - custom
    depends_on:
      - db

  tg_spam_plugin:
    build:
      context: ./App/TgSpamPlugin
      dockerfile: ./Dockerfile
    container_name: tg_spam_plugin_container
    restart: always
    networks:
      - custom
    depends_on:
      - db

  tg_track_stories_plugin:
    build:
      context: ./App/TgTrackStories
      dockerfile: ./Dockerfile
    container_name: tg_track_stories_plugin_container
    restart: always
    networks:
      - custom
    depends_on:
      - db

  inst_spam_plugin:
    build:
      context: ./App/InstSpamPlugin
      dockerfile: ./Dockerfile
    container_name: inst_spam_plugin_container
    restart: always
    networks:
      - custom
    depends_on:
      - db

  run:
    build:
      context: .
      dockerfile: App/Dockerfile  # Уточните путь к Dockerfile вашего приложения
    container_name: run_container
    command: python3 App/Bot/main.py && python3 App/UserAgent/UserAgentStoriesPlugin.py && python3 App/UserAgent/UserAgentSpamPlugin.py && python3 App/Parser/ParserSpamPlugin.py
    depends_on:
      - app
      - tg_spam_plugin
      - tg_track_stories_plugin
      - inst_spam_plugin
    networks:
      - custom

networks:
  custom:
    driver: bridge